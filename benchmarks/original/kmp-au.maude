---Header of the KMP-AU
fmod KMP-HEADER-AU is
	pr NAT .
	ops f g h : -> Nat . ---maximun length of the SString. Eg.: if f=10, then repeat 9 'a' + 'b' + 'nc'.
    eq f = 100000 .
    eq g = 1000000 .
    eq h = 5000000 .	
    
	sorts Symbol SString .
	subsort Symbol < SString .
	op a : -> Symbol .
	op b : -> Symbol .
	op nc : -> SString .
	op __ : SString SString -> SString [assoc id: nc] .  
	
	vars SE SS : Symbol . var N : Nat . var S : SString .  
  
---Parameters: <Symbol start, String, maximun length>
	op create : Symbol SString Nat -> SString . ---function to create the input String
	eq create(SS, S, 1) = SS S .
	eq create(SS, S, s(N)) = create(SS, SS S, N) [owise] .	 	 
endfm

---red in KMP-HEADER-AU : create(a, b nc, f) . ---only create a SString of a+n+nc

---KMP-AU modulo axioms
fmod KMP-AU is
	inc KMP-HEAD-AU .	

	vars PP SS1 SS2 : SString .

	op match : SString SString -> [Bool] .
	eq match(PP, SS1 PP SS2) = true .
endfm

---red in KMP-AU : match((a a b nc), create(a, b nc, f)) . ---goal
